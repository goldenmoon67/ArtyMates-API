type Movie {
  _id: Float!
  countries: [String]
  imdbId: String!
  imdbRating: Float
  imdbVotes: Int
  languages: [String]
  movieId: String!
  plot: String
  poster: String
  released: String
  runtime: Int
  title: String!
  tmdbId: String
  year: Int
  in_genre: [Genre] @relationship(type: "IN_GENRE", direction: "OUT")
  users: [User] @relationship(type: "WATCHED_MOVIE", direction: "IN")
  actors: [Actor] @relationship(type: "ACTED_IN", direction: "IN")
  directors: [Director] @relationship(type: "DIRECTED", direction: "IN")
}
type
type WATCHED_MOVIE @relationship(type: "WATCHED_MOVIE") {
  from: User!
  to: Movie!
  created: DateTime!
  timestamp: Int!
}


type Actor {
   _id: Float!
   name: String!
   acted_in: [Movie] @relationship(type: "ACTED_IN", direction: "OUT")
}

type Director {
   _id: Float!
   name: String!
   directed: [Movie] @relationship(type: "DIRECTED", direction: "OUT")
}

